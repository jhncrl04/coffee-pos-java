/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package coffeesystem;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import javax.swing.table.*;
import java.text.*;

public class Menu extends javax.swing.JFrame {

    // Decimal Formating
    public static final DecimalFormat decimalFormat = new DecimalFormat("0.00");
    
    // Product Info
    String productName = "";
    String sizeSelected = "";
    
    // Intialize order count to zero
    // Coffee order count
    int americanoOrderCount = 0;
    int cappuccinoOrderCount = 0;
    int latteOrderCount = 0;
    int caramelMaccOrderCount = 0;
    int spanishLatteOrderCount = 0;
    int hazelnutOrderCount = 0;
    int saltedCaramelOrderCount = 0;
    int vanillaLatteOrderCount = 0;
    
    // Fruit soda order count
    int strawberrySodaOrderCount = 0;
    int blueberrySodaOrderCount = 0;
    int mangoSodaOrderCount = 0;
    int gappleSodaOrderCount = 0;
    int peachSodaOrderCount = 0;
    
    // Total price of the item inside the bag
    static double totalPriceInBag = 0.0;

    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuScrollPane = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        beverageLabel1 = new javax.swing.JLabel();
        americanoCombobox = new javax.swing.JComboBox<>();
        americanoAddToBagButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        decreaseOrderAmericano = new javax.swing.JButton();
        increaseOrderAmericano = new javax.swing.JButton();
        orderCountAmericano = new javax.swing.JTextField();
        beverageLabel2 = new javax.swing.JLabel();
        cappuccinoCombobox = new javax.swing.JComboBox<>();
        cappuccinoAddToBagButton = new javax.swing.JButton();
        decreaseOrderCappuccino = new javax.swing.JButton();
        orderCountCappuccino = new javax.swing.JTextField();
        increaseOrderCappuccino = new javax.swing.JButton();
        beverageLabel3 = new javax.swing.JLabel();
        latteCombobox = new javax.swing.JComboBox<>();
        latteAddToBagButton = new javax.swing.JButton();
        decreaseOrderLatte = new javax.swing.JButton();
        orderCountLatte = new javax.swing.JTextField();
        increaseOrderLatte = new javax.swing.JButton();
        beverageLabel4 = new javax.swing.JLabel();
        caramelMaccCombobox = new javax.swing.JComboBox<>();
        caramelMaccAddToBagButton = new javax.swing.JButton();
        decreaseOrderCaramelMacc = new javax.swing.JButton();
        orderCountCaramelMacc = new javax.swing.JTextField();
        increaseOrderCaramelMacc = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        beverageLabel5 = new javax.swing.JLabel();
        spanishLatteCombobox = new javax.swing.JComboBox<>();
        spanishLatteAddToBagButton = new javax.swing.JButton();
        decreaseOrderSpanishLatte = new javax.swing.JButton();
        orderCountSpanishLatte = new javax.swing.JTextField();
        increaseOrderSpanishLatte = new javax.swing.JButton();
        beverageLabel6 = new javax.swing.JLabel();
        hazelnutCombobox = new javax.swing.JComboBox<>();
        hazelnutAddToBagButton = new javax.swing.JButton();
        decreaseOrderHazelnut = new javax.swing.JButton();
        orderCountHazelnut = new javax.swing.JTextField();
        increaseOrderHazelnut = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        beverageLabel7 = new javax.swing.JLabel();
        saltedCaramelAddToBagButton = new javax.swing.JButton();
        saltedCaramelCombobox = new javax.swing.JComboBox<>();
        orderCountSaltedCaramel = new javax.swing.JTextField();
        decreaseOrderSaltedCaramel = new javax.swing.JButton();
        increaseOrderSaltedCaramel = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        beverageLabel8 = new javax.swing.JLabel();
        vanillaLatteAddToBagButton = new javax.swing.JButton();
        vanillaLatteCombobox = new javax.swing.JComboBox<>();
        orderCountVanillaLatte = new javax.swing.JTextField();
        decreaseOrderVanillaLatte = new javax.swing.JButton();
        increaseOrderVanillaLatte = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        strawberrySodaAddToBagButton = new javax.swing.JButton();
        beverageLabel9 = new javax.swing.JLabel();
        strawberrySodaCombobox = new javax.swing.JComboBox<>();
        decreaseOrderStrawberrySoda = new javax.swing.JButton();
        orderCountStrawberrySoda = new javax.swing.JTextField();
        increaseOrderStrawberrySoda = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        beverageLabel10 = new javax.swing.JLabel();
        blueberrySodaAddToBagButton = new javax.swing.JButton();
        blueberrySodaCombobox = new javax.swing.JComboBox<>();
        decreaseOrderBlueberrySoda = new javax.swing.JButton();
        orderCountBlueberrySoda = new javax.swing.JTextField();
        increaseOrderBlueberrySoda = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        beverageLabel11 = new javax.swing.JLabel();
        mangoSodaAddToBagButton = new javax.swing.JButton();
        mangoSodaCombobox = new javax.swing.JComboBox<>();
        decreaseOrderMangoSoda = new javax.swing.JButton();
        orderCountMangoSoda = new javax.swing.JTextField();
        increaseOrderMangoSoda = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        beverageLabel12 = new javax.swing.JLabel();
        gappleSodaAddToBagButton = new javax.swing.JButton();
        decreaseOrderGappleSoda = new javax.swing.JButton();
        gappleSodaCombobox = new javax.swing.JComboBox<>();
        orderCountGappleSoda = new javax.swing.JTextField();
        increaseOrderGappleSoda = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        beverageLabel13 = new javax.swing.JLabel();
        peachSodaCombobox = new javax.swing.JComboBox<>();
        peachSodaAddToBagButton = new javax.swing.JButton();
        decreaseOrderPeachSoda = new javax.swing.JButton();
        orderCountPeachSoda = new javax.swing.JTextField();
        increaseOrderPeachSoda = new javax.swing.JButton();
        recieptPanel = new javax.swing.JPanel();
        bagIcon = new javax.swing.JLabel();
        shoppingBagLabel = new javax.swing.JLabel();
        checkOutBtn = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        totalPriceLabel = new javax.swing.JLabel();
        clearListBtn = new javax.swing.JButton();
        removeItemBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bagContent = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        logoutBtn = new javax.swing.JButton();
        profileBtn = new javax.swing.JButton();
        ourMenuBtn = new javax.swing.JButton();
        profileBtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jab's Coffee");
        setIconImages(null);
        setResizable(false);

        menuScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        menuScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        menuScrollPane.setPreferredSize(new java.awt.Dimension(920, 900));

        jPanel4.setBackground(new java.awt.Color(249, 244, 239));
        jPanel4.setAlignmentX(0.0F);
        jPanel4.setAlignmentY(0.0F);
        jPanel4.setFocusable(false);
        jPanel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(1100, 1900));
        jPanel4.setRequestFocusEnabled(false);

        jLabel1.setBackground(new java.awt.Color(249, 244, 239));
        jLabel1.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 3, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(116, 81, 45));
        jLabel1.setText("Welcome,");
        jLabel1.setPreferredSize(new java.awt.Dimension(360, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/caramel-macchiato.jpg"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/americano-img.jpg"))); // NOI18N
        jLabel5.setPreferredSize(new java.awt.Dimension(270, 180));

        beverageLabel1.setBackground(new java.awt.Color(249, 244, 239));
        beverageLabel1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel1.setForeground(new java.awt.Color(113, 96, 64));
        beverageLabel1.setText("Americano");
        beverageLabel1.setPreferredSize(new java.awt.Dimension(100, 25));

        americanoCombobox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        americanoCombobox.setFocusable(false);
        americanoCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        americanoCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                americanoComboboxActionPerformed(evt);
            }
        });

        americanoAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        americanoAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        americanoAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        americanoAddToBagButton.setText("Add to bag");
        americanoAddToBagButton.setBorder(null);
        americanoAddToBagButton.setFocusable(false);
        americanoAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        americanoAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                americanoAddToBagButtonActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cappuccino-img.jpg"))); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(270, 180));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/latte.jpg"))); // NOI18N
        jLabel8.setPreferredSize(new java.awt.Dimension(270, 180));

        decreaseOrderAmericano.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderAmericano.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderAmericano.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderAmericano.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderAmericano.setBorder(null);
        decreaseOrderAmericano.setFocusable(false);
        decreaseOrderAmericano.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderAmericano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderAmericanoActionPerformed(evt);
            }
        });

        increaseOrderAmericano.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderAmericano.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderAmericano.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderAmericano.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderAmericano.setBorder(null);
        increaseOrderAmericano.setFocusable(false);
        increaseOrderAmericano.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderAmericano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderAmericanoActionPerformed(evt);
            }
        });

        orderCountAmericano.setBackground(new java.awt.Color(249, 244, 239));
        orderCountAmericano.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountAmericano.setForeground(new java.awt.Color(113, 96, 64));
        orderCountAmericano.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountAmericano.setText("0");
        orderCountAmericano.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountAmericano.setFocusable(false);
        orderCountAmericano.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountAmericano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountAmericanoActionPerformed(evt);
            }
        });

        beverageLabel2.setBackground(new java.awt.Color(249, 244, 239));
        beverageLabel2.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel2.setForeground(new java.awt.Color(113, 96, 64));
        beverageLabel2.setText("Cappuccino");
        beverageLabel2.setPreferredSize(new java.awt.Dimension(100, 25));

        cappuccinoCombobox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        cappuccinoCombobox.setFocusable(false);
        cappuccinoCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        cappuccinoCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cappuccinoComboboxActionPerformed(evt);
            }
        });

        cappuccinoAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        cappuccinoAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        cappuccinoAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        cappuccinoAddToBagButton.setText("Add to bag");
        cappuccinoAddToBagButton.setFocusable(false);
        cappuccinoAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        cappuccinoAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cappuccinoAddToBagButtonActionPerformed(evt);
            }
        });

        decreaseOrderCappuccino.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderCappuccino.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderCappuccino.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderCappuccino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderCappuccino.setBorder(null);
        decreaseOrderCappuccino.setFocusable(false);
        decreaseOrderCappuccino.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderCappuccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderCappuccinoActionPerformed(evt);
            }
        });

        orderCountCappuccino.setBackground(new java.awt.Color(249, 244, 239));
        orderCountCappuccino.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountCappuccino.setForeground(new java.awt.Color(113, 96, 64));
        orderCountCappuccino.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountCappuccino.setText("0");
        orderCountCappuccino.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountCappuccino.setFocusable(false);
        orderCountCappuccino.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountCappuccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountCappuccinoActionPerformed(evt);
            }
        });

        increaseOrderCappuccino.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderCappuccino.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderCappuccino.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderCappuccino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderCappuccino.setBorder(null);
        increaseOrderCappuccino.setFocusable(false);
        increaseOrderCappuccino.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderCappuccino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderCappuccinoActionPerformed(evt);
            }
        });

        beverageLabel3.setBackground(new java.awt.Color(249, 244, 239));
        beverageLabel3.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel3.setForeground(new java.awt.Color(113, 96, 64));
        beverageLabel3.setText("Latte");
        beverageLabel3.setPreferredSize(new java.awt.Dimension(100, 25));

        latteCombobox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        latteCombobox.setFocusable(false);
        latteCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        latteCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latteComboboxActionPerformed(evt);
            }
        });

        latteAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        latteAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        latteAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        latteAddToBagButton.setText("Add to bag");
        latteAddToBagButton.setFocusPainted(false);
        latteAddToBagButton.setFocusable(false);
        latteAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        latteAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                latteAddToBagButtonActionPerformed(evt);
            }
        });

        decreaseOrderLatte.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderLatte.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderLatte.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderLatte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderLatte.setBorder(null);
        decreaseOrderLatte.setFocusable(false);
        decreaseOrderLatte.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderLatteActionPerformed(evt);
            }
        });

        orderCountLatte.setBackground(new java.awt.Color(249, 244, 239));
        orderCountLatte.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountLatte.setForeground(new java.awt.Color(113, 96, 64));
        orderCountLatte.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountLatte.setText("0");
        orderCountLatte.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountLatte.setFocusable(false);
        orderCountLatte.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountLatteActionPerformed(evt);
            }
        });

        increaseOrderLatte.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderLatte.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderLatte.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderLatte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderLatte.setBorder(null);
        increaseOrderLatte.setFocusable(false);
        increaseOrderLatte.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderLatteActionPerformed(evt);
            }
        });

        beverageLabel4.setBackground(new java.awt.Color(249, 244, 239));
        beverageLabel4.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel4.setForeground(new java.awt.Color(113, 96, 64));
        beverageLabel4.setText("<html>Caramel<br>Macchiato</html>");
        beverageLabel4.setFocusable(false);
        beverageLabel4.setPreferredSize(new java.awt.Dimension(100, 25));

        caramelMaccCombobox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        caramelMaccCombobox.setFocusable(false);
        caramelMaccCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        caramelMaccCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caramelMaccComboboxActionPerformed(evt);
            }
        });

        caramelMaccAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        caramelMaccAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        caramelMaccAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        caramelMaccAddToBagButton.setText("Add to bag");
        caramelMaccAddToBagButton.setFocusable(false);
        caramelMaccAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        caramelMaccAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caramelMaccAddToBagButtonActionPerformed(evt);
            }
        });

        decreaseOrderCaramelMacc.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderCaramelMacc.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderCaramelMacc.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderCaramelMacc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderCaramelMacc.setBorder(null);
        decreaseOrderCaramelMacc.setFocusable(false);
        decreaseOrderCaramelMacc.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderCaramelMacc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderCaramelMaccActionPerformed(evt);
            }
        });

        orderCountCaramelMacc.setBackground(new java.awt.Color(249, 244, 239));
        orderCountCaramelMacc.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountCaramelMacc.setForeground(new java.awt.Color(113, 96, 64));
        orderCountCaramelMacc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountCaramelMacc.setText("0");
        orderCountCaramelMacc.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountCaramelMacc.setFocusable(false);
        orderCountCaramelMacc.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountCaramelMacc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountCaramelMaccActionPerformed(evt);
            }
        });

        increaseOrderCaramelMacc.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderCaramelMacc.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderCaramelMacc.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderCaramelMacc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderCaramelMacc.setBorder(null);
        increaseOrderCaramelMacc.setFocusable(false);
        increaseOrderCaramelMacc.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderCaramelMacc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderCaramelMaccActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/spanish-latte.jpg"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hazelnut-img.png"))); // NOI18N
        jLabel12.setPreferredSize(new java.awt.Dimension(270, 180));

        beverageLabel5.setBackground(new java.awt.Color(249, 244, 239));
        beverageLabel5.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel5.setForeground(new java.awt.Color(113, 96, 64));
        beverageLabel5.setText("<html>Spanish<br>Latte</html>");
        beverageLabel5.setFocusable(false);
        beverageLabel5.setPreferredSize(new java.awt.Dimension(100, 25));

        spanishLatteCombobox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        spanishLatteCombobox.setFocusable(false);
        spanishLatteCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        spanishLatteCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spanishLatteComboboxActionPerformed(evt);
            }
        });

        spanishLatteAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        spanishLatteAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        spanishLatteAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        spanishLatteAddToBagButton.setText("Add to bag");
        spanishLatteAddToBagButton.setFocusable(false);
        spanishLatteAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        spanishLatteAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spanishLatteAddToBagButtonActionPerformed(evt);
            }
        });

        decreaseOrderSpanishLatte.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderSpanishLatte.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderSpanishLatte.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderSpanishLatte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderSpanishLatte.setBorder(null);
        decreaseOrderSpanishLatte.setFocusable(false);
        decreaseOrderSpanishLatte.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderSpanishLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderSpanishLatteActionPerformed(evt);
            }
        });

        orderCountSpanishLatte.setBackground(new java.awt.Color(249, 244, 239));
        orderCountSpanishLatte.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountSpanishLatte.setForeground(new java.awt.Color(113, 96, 64));
        orderCountSpanishLatte.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountSpanishLatte.setText("0");
        orderCountSpanishLatte.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountSpanishLatte.setFocusable(false);
        orderCountSpanishLatte.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountSpanishLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountSpanishLatteActionPerformed(evt);
            }
        });

        increaseOrderSpanishLatte.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderSpanishLatte.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderSpanishLatte.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderSpanishLatte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderSpanishLatte.setBorder(null);
        increaseOrderSpanishLatte.setFocusable(false);
        increaseOrderSpanishLatte.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderSpanishLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderSpanishLatteActionPerformed(evt);
            }
        });

        beverageLabel6.setBackground(new java.awt.Color(249, 244, 239));
        beverageLabel6.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel6.setForeground(new java.awt.Color(113, 96, 64));
        beverageLabel6.setText("Hazelnut");
        beverageLabel6.setFocusable(false);
        beverageLabel6.setPreferredSize(new java.awt.Dimension(100, 25));

        hazelnutCombobox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        hazelnutCombobox.setFocusable(false);
        hazelnutCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        hazelnutCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hazelnutComboboxActionPerformed(evt);
            }
        });

        hazelnutAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        hazelnutAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        hazelnutAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        hazelnutAddToBagButton.setText("Add to bag");
        hazelnutAddToBagButton.setFocusable(false);
        hazelnutAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        hazelnutAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hazelnutAddToBagButtonActionPerformed(evt);
            }
        });

        decreaseOrderHazelnut.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderHazelnut.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderHazelnut.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderHazelnut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderHazelnut.setBorder(null);
        decreaseOrderHazelnut.setFocusable(false);
        decreaseOrderHazelnut.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderHazelnut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderHazelnutActionPerformed(evt);
            }
        });

        orderCountHazelnut.setBackground(new java.awt.Color(249, 244, 239));
        orderCountHazelnut.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountHazelnut.setForeground(new java.awt.Color(113, 96, 64));
        orderCountHazelnut.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountHazelnut.setText("0");
        orderCountHazelnut.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountHazelnut.setFocusable(false);
        orderCountHazelnut.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountHazelnut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountHazelnutActionPerformed(evt);
            }
        });

        increaseOrderHazelnut.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderHazelnut.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderHazelnut.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderHazelnut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderHazelnut.setBorder(null);
        increaseOrderHazelnut.setFocusable(false);
        increaseOrderHazelnut.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderHazelnut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderHazelnutActionPerformed(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/salted-caramel-img.jpg"))); // NOI18N

        beverageLabel7.setBackground(new java.awt.Color(249, 244, 239));
        beverageLabel7.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel7.setForeground(new java.awt.Color(113, 96, 64));
        beverageLabel7.setText("<html>Salted<br>Caramel</html>");
        beverageLabel7.setFocusable(false);
        beverageLabel7.setPreferredSize(new java.awt.Dimension(100, 25));

        saltedCaramelAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        saltedCaramelAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        saltedCaramelAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        saltedCaramelAddToBagButton.setText("Add to bag");
        saltedCaramelAddToBagButton.setFocusable(false);
        saltedCaramelAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        saltedCaramelAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saltedCaramelAddToBagButtonActionPerformed(evt);
            }
        });

        saltedCaramelCombobox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        saltedCaramelCombobox.setFocusable(false);
        saltedCaramelCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        saltedCaramelCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saltedCaramelComboboxActionPerformed(evt);
            }
        });

        orderCountSaltedCaramel.setBackground(new java.awt.Color(249, 244, 239));
        orderCountSaltedCaramel.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountSaltedCaramel.setForeground(new java.awt.Color(113, 96, 64));
        orderCountSaltedCaramel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountSaltedCaramel.setText("0");
        orderCountSaltedCaramel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountSaltedCaramel.setFocusable(false);
        orderCountSaltedCaramel.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountSaltedCaramel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountSaltedCaramelActionPerformed(evt);
            }
        });

        decreaseOrderSaltedCaramel.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderSaltedCaramel.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderSaltedCaramel.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderSaltedCaramel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderSaltedCaramel.setBorder(null);
        decreaseOrderSaltedCaramel.setFocusable(false);
        decreaseOrderSaltedCaramel.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderSaltedCaramel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderSaltedCaramelActionPerformed(evt);
            }
        });

        increaseOrderSaltedCaramel.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderSaltedCaramel.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderSaltedCaramel.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderSaltedCaramel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderSaltedCaramel.setBorder(null);
        increaseOrderSaltedCaramel.setFocusable(false);
        increaseOrderSaltedCaramel.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderSaltedCaramel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderSaltedCaramelActionPerformed(evt);
            }
        });

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/vanilla-latte.jpg"))); // NOI18N

        beverageLabel8.setBackground(new java.awt.Color(249, 244, 239));
        beverageLabel8.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel8.setForeground(new java.awt.Color(113, 96, 64));
        beverageLabel8.setText("Vanilla Latte");
        beverageLabel8.setFocusable(false);
        beverageLabel8.setPreferredSize(new java.awt.Dimension(100, 25));

        vanillaLatteAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        vanillaLatteAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        vanillaLatteAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        vanillaLatteAddToBagButton.setText("Add to bag");
        vanillaLatteAddToBagButton.setFocusable(false);
        vanillaLatteAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        vanillaLatteAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanillaLatteAddToBagButtonActionPerformed(evt);
            }
        });

        vanillaLatteCombobox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        vanillaLatteCombobox.setFocusable(false);
        vanillaLatteCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        vanillaLatteCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanillaLatteComboboxActionPerformed(evt);
            }
        });

        orderCountVanillaLatte.setBackground(new java.awt.Color(249, 244, 239));
        orderCountVanillaLatte.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountVanillaLatte.setForeground(new java.awt.Color(113, 96, 64));
        orderCountVanillaLatte.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountVanillaLatte.setText("0");
        orderCountVanillaLatte.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountVanillaLatte.setFocusable(false);
        orderCountVanillaLatte.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountVanillaLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountVanillaLatteActionPerformed(evt);
            }
        });

        decreaseOrderVanillaLatte.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderVanillaLatte.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderVanillaLatte.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderVanillaLatte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderVanillaLatte.setBorder(null);
        decreaseOrderVanillaLatte.setFocusable(false);
        decreaseOrderVanillaLatte.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderVanillaLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderVanillaLatteActionPerformed(evt);
            }
        });

        increaseOrderVanillaLatte.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderVanillaLatte.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderVanillaLatte.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderVanillaLatte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderVanillaLatte.setBorder(null);
        increaseOrderVanillaLatte.setFocusable(false);
        increaseOrderVanillaLatte.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderVanillaLatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderVanillaLatteActionPerformed(evt);
            }
        });

        jLabel19.setBackground(new java.awt.Color(116, 81, 45));
        jLabel19.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 3, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(249, 244, 239));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Coffee");
        jLabel19.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 30, 10, 30));
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel19.setOpaque(true);
        jLabel19.setPreferredSize(new java.awt.Dimension(158, 48));

        jLabel20.setBackground(new java.awt.Color(116, 81, 45));
        jLabel20.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 3, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(249, 244, 239));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Fruit Soda");
        jLabel20.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 30, 10, 30));
        jLabel20.setOpaque(true);

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/strawberry-soda.jpg"))); // NOI18N

        strawberrySodaAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        strawberrySodaAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        strawberrySodaAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        strawberrySodaAddToBagButton.setText("Add to bag");
        strawberrySodaAddToBagButton.setFocusable(false);
        strawberrySodaAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        strawberrySodaAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strawberrySodaAddToBagButtonActionPerformed(evt);
            }
        });

        beverageLabel9.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        beverageLabel9.setText("Strawberry");
        beverageLabel9.setFocusable(false);
        beverageLabel9.setPreferredSize(new java.awt.Dimension(100, 25));

        strawberrySodaCombobox.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        strawberrySodaCombobox.setFocusable(false);
        strawberrySodaCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        strawberrySodaCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strawberrySodaComboboxActionPerformed(evt);
            }
        });

        decreaseOrderStrawberrySoda.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderStrawberrySoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderStrawberrySoda.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderStrawberrySoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderStrawberrySoda.setBorder(null);
        decreaseOrderStrawberrySoda.setFocusable(false);
        decreaseOrderStrawberrySoda.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderStrawberrySoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderStrawberrySodaActionPerformed(evt);
            }
        });

        orderCountStrawberrySoda.setBackground(new java.awt.Color(249, 244, 239));
        orderCountStrawberrySoda.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountStrawberrySoda.setForeground(new java.awt.Color(113, 96, 64));
        orderCountStrawberrySoda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountStrawberrySoda.setText("0");
        orderCountStrawberrySoda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountStrawberrySoda.setFocusable(false);
        orderCountStrawberrySoda.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountStrawberrySoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountStrawberrySodaActionPerformed(evt);
            }
        });

        increaseOrderStrawberrySoda.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderStrawberrySoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderStrawberrySoda.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderStrawberrySoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderStrawberrySoda.setBorder(null);
        increaseOrderStrawberrySoda.setFocusable(false);
        increaseOrderStrawberrySoda.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderStrawberrySoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderStrawberrySodaActionPerformed(evt);
            }
        });

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blueberry-soda.jpg"))); // NOI18N

        beverageLabel10.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        beverageLabel10.setText("Blueberry");
        beverageLabel10.setFocusable(false);
        beverageLabel10.setPreferredSize(new java.awt.Dimension(100, 25));

        blueberrySodaAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        blueberrySodaAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        blueberrySodaAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        blueberrySodaAddToBagButton.setText("Add to bag");
        blueberrySodaAddToBagButton.setFocusable(false);
        blueberrySodaAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        blueberrySodaAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueberrySodaAddToBagButtonActionPerformed(evt);
            }
        });

        blueberrySodaCombobox.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        blueberrySodaCombobox.setFocusable(false);
        blueberrySodaCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        blueberrySodaCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueberrySodaComboboxActionPerformed(evt);
            }
        });

        decreaseOrderBlueberrySoda.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderBlueberrySoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderBlueberrySoda.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderBlueberrySoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderBlueberrySoda.setBorder(null);
        decreaseOrderBlueberrySoda.setFocusable(false);
        decreaseOrderBlueberrySoda.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderBlueberrySoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderBlueberrySodaActionPerformed(evt);
            }
        });

        orderCountBlueberrySoda.setBackground(new java.awt.Color(249, 244, 239));
        orderCountBlueberrySoda.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountBlueberrySoda.setForeground(new java.awt.Color(113, 96, 64));
        orderCountBlueberrySoda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountBlueberrySoda.setText("0");
        orderCountBlueberrySoda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountBlueberrySoda.setFocusable(false);
        orderCountBlueberrySoda.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountBlueberrySoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountBlueberrySodaActionPerformed(evt);
            }
        });

        increaseOrderBlueberrySoda.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderBlueberrySoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderBlueberrySoda.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderBlueberrySoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderBlueberrySoda.setBorder(null);
        increaseOrderBlueberrySoda.setFocusable(false);
        increaseOrderBlueberrySoda.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderBlueberrySoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderBlueberrySodaActionPerformed(evt);
            }
        });

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/mango-soda.jpg"))); // NOI18N

        beverageLabel11.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        beverageLabel11.setText("Mango");
        beverageLabel11.setFocusable(false);
        beverageLabel11.setPreferredSize(new java.awt.Dimension(100, 25));

        mangoSodaAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        mangoSodaAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        mangoSodaAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        mangoSodaAddToBagButton.setText("Add to bag");
        mangoSodaAddToBagButton.setFocusable(false);
        mangoSodaAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        mangoSodaAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mangoSodaAddToBagButtonActionPerformed(evt);
            }
        });

        mangoSodaCombobox.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        mangoSodaCombobox.setFocusable(false);
        mangoSodaCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        mangoSodaCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mangoSodaComboboxActionPerformed(evt);
            }
        });

        decreaseOrderMangoSoda.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderMangoSoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderMangoSoda.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderMangoSoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderMangoSoda.setBorder(null);
        decreaseOrderMangoSoda.setFocusable(false);
        decreaseOrderMangoSoda.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderMangoSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderMangoSodaActionPerformed(evt);
            }
        });

        orderCountMangoSoda.setBackground(new java.awt.Color(249, 244, 239));
        orderCountMangoSoda.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountMangoSoda.setForeground(new java.awt.Color(113, 96, 64));
        orderCountMangoSoda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountMangoSoda.setText("0");
        orderCountMangoSoda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountMangoSoda.setFocusable(false);
        orderCountMangoSoda.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountMangoSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountMangoSodaActionPerformed(evt);
            }
        });

        increaseOrderMangoSoda.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderMangoSoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderMangoSoda.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderMangoSoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderMangoSoda.setBorder(null);
        increaseOrderMangoSoda.setFocusable(false);
        increaseOrderMangoSoda.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderMangoSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderMangoSodaActionPerformed(evt);
            }
        });

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/green-apple-soda.jpg"))); // NOI18N

        beverageLabel12.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        beverageLabel12.setText("Green Apple");
        beverageLabel12.setFocusable(false);
        beverageLabel12.setPreferredSize(new java.awt.Dimension(100, 25));

        gappleSodaAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        gappleSodaAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        gappleSodaAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        gappleSodaAddToBagButton.setText("Add to bag");
        gappleSodaAddToBagButton.setFocusable(false);
        gappleSodaAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        gappleSodaAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gappleSodaAddToBagButtonActionPerformed(evt);
            }
        });

        decreaseOrderGappleSoda.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderGappleSoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderGappleSoda.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderGappleSoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderGappleSoda.setBorder(null);
        decreaseOrderGappleSoda.setFocusable(false);
        decreaseOrderGappleSoda.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderGappleSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderGappleSodaActionPerformed(evt);
            }
        });

        gappleSodaCombobox.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        gappleSodaCombobox.setFocusable(false);
        gappleSodaCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        gappleSodaCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gappleSodaComboboxActionPerformed(evt);
            }
        });

        orderCountGappleSoda.setBackground(new java.awt.Color(249, 244, 239));
        orderCountGappleSoda.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountGappleSoda.setForeground(new java.awt.Color(113, 96, 64));
        orderCountGappleSoda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountGappleSoda.setText("0");
        orderCountGappleSoda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountGappleSoda.setFocusable(false);
        orderCountGappleSoda.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountGappleSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountGappleSodaActionPerformed(evt);
            }
        });

        increaseOrderGappleSoda.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderGappleSoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderGappleSoda.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderGappleSoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderGappleSoda.setBorder(null);
        increaseOrderGappleSoda.setFocusable(false);
        increaseOrderGappleSoda.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderGappleSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderGappleSodaActionPerformed(evt);
            }
        });

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/peach-soda.jpg"))); // NOI18N

        beverageLabel13.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        beverageLabel13.setText("Peach");
        beverageLabel13.setFocusable(false);
        beverageLabel13.setPreferredSize(new java.awt.Dimension(100, 25));

        peachSodaCombobox.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        peachSodaCombobox.setFocusable(false);
        peachSodaCombobox.setPreferredSize(new java.awt.Dimension(120, 25));
        peachSodaCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peachSodaComboboxActionPerformed(evt);
            }
        });

        peachSodaAddToBagButton.setBackground(new java.awt.Color(140, 120, 81));
        peachSodaAddToBagButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        peachSodaAddToBagButton.setForeground(new java.awt.Color(255, 255, 254));
        peachSodaAddToBagButton.setText("Add to bag");
        peachSodaAddToBagButton.setFocusable(false);
        peachSodaAddToBagButton.setPreferredSize(new java.awt.Dimension(260, 40));
        peachSodaAddToBagButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peachSodaAddToBagButtonActionPerformed(evt);
            }
        });

        decreaseOrderPeachSoda.setBackground(new java.awt.Color(249, 244, 239));
        decreaseOrderPeachSoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        decreaseOrderPeachSoda.setForeground(new java.awt.Color(232, 231, 230));
        decreaseOrderPeachSoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/decrease-icon.png"))); // NOI18N
        decreaseOrderPeachSoda.setBorder(null);
        decreaseOrderPeachSoda.setFocusable(false);
        decreaseOrderPeachSoda.setPreferredSize(new java.awt.Dimension(30, 30));
        decreaseOrderPeachSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decreaseOrderPeachSodaActionPerformed(evt);
            }
        });

        orderCountPeachSoda.setBackground(new java.awt.Color(249, 244, 239));
        orderCountPeachSoda.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        orderCountPeachSoda.setForeground(new java.awt.Color(113, 96, 64));
        orderCountPeachSoda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        orderCountPeachSoda.setText("0");
        orderCountPeachSoda.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 54, 47), 2, true));
        orderCountPeachSoda.setFocusable(false);
        orderCountPeachSoda.setPreferredSize(new java.awt.Dimension(35, 40));
        orderCountPeachSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderCountPeachSodaActionPerformed(evt);
            }
        });

        increaseOrderPeachSoda.setBackground(new java.awt.Color(249, 244, 239));
        increaseOrderPeachSoda.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        increaseOrderPeachSoda.setForeground(new java.awt.Color(232, 231, 230));
        increaseOrderPeachSoda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add-icon.png"))); // NOI18N
        increaseOrderPeachSoda.setBorder(null);
        increaseOrderPeachSoda.setFocusable(false);
        increaseOrderPeachSoda.setPreferredSize(new java.awt.Dimension(30, 30));
        increaseOrderPeachSoda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseOrderPeachSodaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(gappleSodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(gappleSodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(decreaseOrderGappleSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderCountGappleSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(increaseOrderGappleSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel27))
                        .addGap(55, 55, 55)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(peachSodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(peachSodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(decreaseOrderPeachSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderCountPeachSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(increaseOrderPeachSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel29)))
                    .addComponent(jLabel20)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(210, 210, 210)
                        .addComponent(jLabel2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(americanoCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(americanoAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(decreaseOrderAmericano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderCountAmericano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(increaseOrderAmericano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(caramelMaccCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(caramelMaccAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(decreaseOrderCaramelMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderCountCaramelMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(increaseOrderCaramelMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(saltedCaramelCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(saltedCaramelAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(decreaseOrderSaltedCaramel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderCountSaltedCaramel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(increaseOrderSaltedCaramel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(strawberrySodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(strawberrySodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(decreaseOrderStrawberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderCountStrawberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(increaseOrderStrawberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel21))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(vanillaLatteCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(vanillaLatteAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(decreaseOrderVanillaLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderCountVanillaLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(increaseOrderVanillaLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(beverageLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(40, 40, 40)
                                                .addComponent(spanishLatteCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(spanishLatteAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(decreaseOrderSpanishLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(orderCountSpanishLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(increaseOrderSpanishLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel11))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(beverageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(cappuccinoCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(cappuccinoAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(decreaseOrderCappuccino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(orderCountCappuccino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(increaseOrderCappuccino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(beverageLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(blueberrySodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(blueberrySodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(decreaseOrderBlueberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(orderCountBlueberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(increaseOrderBlueberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel23))
                                .addGap(60, 60, 60)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(beverageLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(mangoSodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(mangoSodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(decreaseOrderMangoSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(orderCountMangoSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(increaseOrderMangoSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(beverageLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addComponent(latteCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(latteAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(decreaseOrderLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(orderCountLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(increaseOrderLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                            .addComponent(beverageLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(hazelnutCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                            .addComponent(hazelnutAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(decreaseOrderHazelnut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(orderCountHazelnut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(increaseOrderHazelnut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jLabel2))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(beverageLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(americanoCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(americanoAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(increaseOrderAmericano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(decreaseOrderAmericano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderCountAmericano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(beverageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cappuccinoCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cappuccinoAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(increaseOrderCappuccino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decreaseOrderCappuccino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderCountCappuccino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(beverageLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(latteCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(latteAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(increaseOrderLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decreaseOrderLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderCountLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(caramelMaccCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(beverageLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(caramelMaccAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(increaseOrderCaramelMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decreaseOrderCaramelMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderCountCaramelMacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(increaseOrderHazelnut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(decreaseOrderHazelnut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderCountHazelnut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(spanishLatteCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(beverageLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(hazelnutCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(beverageLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(spanishLatteAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(increaseOrderSpanishLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(decreaseOrderSpanishLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(orderCountSpanishLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(hazelnutAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(saltedCaramelCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(saltedCaramelAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(increaseOrderSaltedCaramel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(decreaseOrderSaltedCaramel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderCountSaltedCaramel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(beverageLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(vanillaLatteCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(vanillaLatteAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(increaseOrderVanillaLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(decreaseOrderVanillaLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderCountVanillaLatte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(beverageLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(70, 70, 70)
                .addComponent(jLabel20)
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(strawberrySodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(decreaseOrderStrawberrySoda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderCountStrawberrySoda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(increaseOrderStrawberrySoda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(strawberrySodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(blueberrySodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(beverageLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(blueberrySodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(increaseOrderBlueberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(decreaseOrderBlueberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderCountBlueberrySoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mangoSodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(decreaseOrderMangoSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderCountMangoSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(increaseOrderMangoSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(beverageLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(26, 26, 26)
                        .addComponent(mangoSodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gappleSodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(beverageLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gappleSodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(increaseOrderGappleSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decreaseOrderGappleSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderCountGappleSoda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(peachSodaCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(decreaseOrderPeachSoda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(orderCountPeachSoda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(increaseOrderPeachSoda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(beverageLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(peachSodaAddToBagButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jLabel1.setText("Welcome, " + CoffeeSystem.userFName);
        DBQuery.loadMenu(beverageLabel1.getText(), americanoCombobox);
        if(americanoCombobox.getItemCount() == 0){
            americanoAddToBagButton.setText("Unavailable");
            americanoAddToBagButton.setEnabled(false);
            increaseOrderAmericano.setEnabled(false);
            decreaseOrderAmericano.setEnabled(false);
        }
        else{
            americanoAddToBagButton.setText("Add to bag");
            americanoAddToBagButton.setEnabled(true);
            increaseOrderAmericano.setEnabled(true);
            decreaseOrderAmericano.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel2.getText(), cappuccinoCombobox);
        if(cappuccinoCombobox.getItemCount() == 0){
            cappuccinoAddToBagButton.setText("Unavailable");
            cappuccinoAddToBagButton.setEnabled(false);
            increaseOrderCappuccino.setEnabled(false);
            decreaseOrderCappuccino.setEnabled(false);
        }
        else{
            cappuccinoAddToBagButton.setText("Add to bag");
            cappuccinoAddToBagButton.setEnabled(true);
            increaseOrderCappuccino.setEnabled(true);
            decreaseOrderCappuccino.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel3.getText(), latteCombobox);
        if(latteCombobox.getItemCount() == 0){
            latteAddToBagButton.setText("Unavailable");
            latteAddToBagButton.setEnabled(false);
            increaseOrderLatte.setEnabled(false);
            decreaseOrderLatte.setEnabled(false);
        }
        else{
            latteAddToBagButton.setText("Add to bag");
            latteAddToBagButton.setEnabled(true);
            increaseOrderLatte.setEnabled(true);
            decreaseOrderLatte.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel4.getText(), caramelMaccCombobox);
        if(caramelMaccCombobox.getItemCount() == 0){
            caramelMaccAddToBagButton.setText("Unavailable");
            caramelMaccAddToBagButton.setEnabled(false);
            increaseOrderCaramelMacc.setEnabled(false);
            decreaseOrderCaramelMacc.setEnabled(false);
        }
        else{
            caramelMaccAddToBagButton.setText("Add to bag");
            caramelMaccAddToBagButton.setEnabled(true);
            increaseOrderCaramelMacc.setEnabled(true);
            decreaseOrderCaramelMacc.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel5.getText(), spanishLatteCombobox);
        if(spanishLatteCombobox.getItemCount() == 0){
            spanishLatteAddToBagButton.setText("Unavailable");
            spanishLatteAddToBagButton.setEnabled(false);
            increaseOrderSpanishLatte.setEnabled(false);
            decreaseOrderSpanishLatte.setEnabled(false);
        }
        else{
            spanishLatteAddToBagButton.setText("Add to bag");
            spanishLatteAddToBagButton.setEnabled(true);
            increaseOrderSpanishLatte.setEnabled(true);
            decreaseOrderSpanishLatte.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel6.getText(), hazelnutCombobox);
        if(hazelnutCombobox.getItemCount() == 0){
            hazelnutAddToBagButton.setText("Unavailable");
            hazelnutAddToBagButton.setEnabled(false);
            increaseOrderHazelnut.setEnabled(false);
            decreaseOrderHazelnut.setEnabled(false);
        }
        else{
            hazelnutAddToBagButton.setText("Add to bag");
            hazelnutAddToBagButton.setEnabled(true);
            increaseOrderHazelnut.setEnabled(true);
            decreaseOrderHazelnut.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel7.getText(), saltedCaramelCombobox);
        if(saltedCaramelCombobox.getItemCount() == 0){
            saltedCaramelAddToBagButton.setText("Unavailable");
            saltedCaramelAddToBagButton.setEnabled(false);
            increaseOrderSaltedCaramel.setEnabled(false);
            decreaseOrderSaltedCaramel.setEnabled(false);
        }
        else{
            saltedCaramelAddToBagButton.setText("Add to bag");
            saltedCaramelAddToBagButton.setEnabled(true);
            increaseOrderSaltedCaramel.setEnabled(true);
            decreaseOrderSaltedCaramel.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel8.getText(), vanillaLatteCombobox);
        if(americanoCombobox.getItemCount() == 0){
            vanillaLatteAddToBagButton.setText("Unavailable");
            vanillaLatteAddToBagButton.setEnabled(false);
            increaseOrderVanillaLatte.setEnabled(false);
            decreaseOrderVanillaLatte.setEnabled(false);
        }
        else{
            vanillaLatteAddToBagButton.setText("Add to bag");
            vanillaLatteAddToBagButton.setEnabled(true);
            increaseOrderVanillaLatte.setEnabled(true);
            decreaseOrderVanillaLatte.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel9.getText(), strawberrySodaCombobox);
        if(strawberrySodaCombobox.getItemCount() == 0){
            strawberrySodaAddToBagButton.setText("Unavailable");
            strawberrySodaAddToBagButton.setEnabled(false);
            increaseOrderStrawberrySoda.setEnabled(false);
            decreaseOrderStrawberrySoda.setEnabled(false);
        }
        else{
            strawberrySodaAddToBagButton.setText("Add to bag");
            strawberrySodaAddToBagButton.setEnabled(true);
            increaseOrderStrawberrySoda.setEnabled(true);
            decreaseOrderStrawberrySoda.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel10.getText(), blueberrySodaCombobox);
        if(blueberrySodaCombobox.getItemCount() == 0){
            blueberrySodaAddToBagButton.setText("Unavailable");
            blueberrySodaAddToBagButton.setEnabled(false);
            increaseOrderBlueberrySoda.setEnabled(false);
            decreaseOrderBlueberrySoda.setEnabled(false);
        }
        else{
            blueberrySodaAddToBagButton.setText("Add to bag");
            blueberrySodaAddToBagButton.setEnabled(true);
            increaseOrderBlueberrySoda.setEnabled(true);
            decreaseOrderBlueberrySoda.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel11.getText(), mangoSodaCombobox);
        if(mangoSodaCombobox.getItemCount() == 0){
            mangoSodaAddToBagButton.setText("Unavailable");
            mangoSodaAddToBagButton.setEnabled(false);
            increaseOrderMangoSoda.setEnabled(false);
            decreaseOrderMangoSoda.setEnabled(false);
        }
        else{
            mangoSodaAddToBagButton.setText("Add to bag");
            mangoSodaAddToBagButton.setEnabled(true);
            increaseOrderMangoSoda.setEnabled(true);
            decreaseOrderMangoSoda.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel12.getText(), gappleSodaCombobox);
        if(gappleSodaCombobox.getItemCount() == 0){
            gappleSodaAddToBagButton.setText("Unavailable");
            gappleSodaAddToBagButton.setEnabled(false);
            increaseOrderGappleSoda.setEnabled(false);
            decreaseOrderGappleSoda.setEnabled(false);
        }
        else{
            gappleSodaAddToBagButton.setText("Add to bag");
            gappleSodaAddToBagButton.setEnabled(true);
            increaseOrderGappleSoda.setEnabled(true);
            decreaseOrderGappleSoda.setEnabled(true);
        }
        DBQuery.loadMenu(beverageLabel13.getText(), peachSodaCombobox);
        if(peachSodaCombobox.getItemCount() == 0){
            peachSodaAddToBagButton.setText("Unavailable");
            peachSodaAddToBagButton.setEnabled(false);
            increaseOrderPeachSoda.setEnabled(false);
            decreaseOrderPeachSoda.setEnabled(false);
        }
        else{
            peachSodaAddToBagButton.setText("Add to bag");
            peachSodaAddToBagButton.setEnabled(true);
            increaseOrderPeachSoda.setEnabled(true);
            decreaseOrderPeachSoda.setEnabled(true);
        }

        menuScrollPane.setViewportView(jPanel4);

        recieptPanel.setBackground(new java.awt.Color(234, 221, 207));
        recieptPanel.setPreferredSize(new java.awt.Dimension(400, 750));

        bagIcon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bagIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/shopping-bag.png"))); // NOI18N

        shoppingBagLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        shoppingBagLabel.setForeground(new java.awt.Color(113, 96, 64));
        shoppingBagLabel.setText("Order List");

        checkOutBtn.setBackground(new java.awt.Color(140, 120, 81));
        checkOutBtn.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        checkOutBtn.setForeground(new java.awt.Color(255, 255, 254));
        checkOutBtn.setText("Check Out");
        checkOutBtn.setBorder(null);
        checkOutBtn.setPreferredSize(new java.awt.Dimension(130, 40));
        checkOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkOutBtnActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(113, 96, 64));
        jLabel31.setText("Total:");
        jLabel31.setPreferredSize(new java.awt.Dimension(100, 40));

        totalPriceLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        totalPriceLabel.setForeground(new java.awt.Color(113, 96, 64));
        totalPriceLabel.setPreferredSize(new java.awt.Dimension(100, 40));

        clearListBtn.setBackground(new java.awt.Color(140, 120, 81));
        clearListBtn.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        clearListBtn.setForeground(new java.awt.Color(255, 255, 254));
        clearListBtn.setText("Clear");
        clearListBtn.setBorder(null);
        clearListBtn.setPreferredSize(new java.awt.Dimension(130, 30));
        clearListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearListBtnActionPerformed(evt);
            }
        });

        removeItemBtn.setBackground(new java.awt.Color(140, 120, 81));
        removeItemBtn.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        removeItemBtn.setForeground(new java.awt.Color(255, 255, 254));
        removeItemBtn.setText("Remove");
        removeItemBtn.setBorder(null);
        removeItemBtn.setPreferredSize(new java.awt.Dimension(130, 30));
        removeItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemBtnActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 300));

        bagContent.setBackground(new java.awt.Color(249, 244, 239));
        bagContent.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        bagContent.setForeground(new java.awt.Color(113, 96, 64));
        bagContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Beverages", "Size", "Qnty", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex){
                return false;
            }
        });
        JTableHeader header = bagContent.getTableHeader();
        header = bagContent.getTableHeader();
        header.setForeground(new java.awt.Color(113, 96, 64));
        header.setBackground(new java.awt.Color(249, 244, 239));
        Dimension d = header.getPreferredSize();
        header.setPreferredSize(new Dimension(d.height, 30))
        ;
        bagContent.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        bagContent.setRowHeight(25);
        jScrollPane1.setViewportView(bagContent);
        bagContent.getColumnModel().getColumn(0).setPreferredWidth(120);
        bagContent.getColumnModel().getColumn(1).setPreferredWidth(70);
        bagContent.getColumnModel().getColumn(2).setPreferredWidth(40);
        bagContent.getColumnModel().getColumn(3).setPreferredWidth(50);

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );

        for(int i = 0; i < bagContent.getColumnCount(); i++){
            bagContent.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        javax.swing.GroupLayout recieptPanelLayout = new javax.swing.GroupLayout(recieptPanel);
        recieptPanel.setLayout(recieptPanelLayout);
        recieptPanelLayout.setHorizontalGroup(
            recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recieptPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(checkOutBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, recieptPanelLayout.createSequentialGroup()
                            .addComponent(bagIcon)
                            .addGap(18, 18, 18)
                            .addComponent(shoppingBagLabel))
                        .addGroup(recieptPanelLayout.createSequentialGroup()
                            .addGroup(recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(removeItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                            .addGroup(recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(totalPriceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clearListBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 44, Short.MAX_VALUE))
        );
        recieptPanelLayout.setVerticalGroup(
            recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recieptPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bagIcon)
                    .addComponent(shoppingBagLabel))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(recieptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clearListBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(checkOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(232, 231, 230));
        jPanel2.setPreferredSize(new java.awt.Dimension(1500, 50));

        logoutBtn.setBackground(new java.awt.Color(232, 231, 230));
        logoutBtn.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(113, 96, 64));
        logoutBtn.setText("Log Out");
        logoutBtn.setBorder(null);
        logoutBtn.setFocusable(false);
        logoutBtn.setPreferredSize(new java.awt.Dimension(90, 30));
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        profileBtn.setBackground(new java.awt.Color(232, 231, 230));
        profileBtn.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        profileBtn.setForeground(new java.awt.Color(113, 96, 64));
        profileBtn.setText("My Profile");
        profileBtn.setBorder(null);
        profileBtn.setFocusable(false);
        profileBtn.setPreferredSize(new java.awt.Dimension(200, 30));
        profileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileBtnActionPerformed(evt);
            }
        });

        ourMenuBtn.setBackground(new java.awt.Color(143, 120, 81));
        ourMenuBtn.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        ourMenuBtn.setForeground(new java.awt.Color(249, 244, 239));
        ourMenuBtn.setText("Our Menu");
        ourMenuBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(2, 8, 38), 2, true));
        ourMenuBtn.setFocusable(false);
        ourMenuBtn.setPreferredSize(new java.awt.Dimension(120, 30));
        ourMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ourMenuBtnActionPerformed(evt);
            }
        });

        profileBtn1.setBackground(new java.awt.Color(232, 231, 230));
        profileBtn1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        profileBtn1.setForeground(new java.awt.Color(113, 96, 64));
        profileBtn1.setText("Dashboard");
        profileBtn1.setBorder(null);
        profileBtn1.setFocusable(false);
        profileBtn1.setPreferredSize(new java.awt.Dimension(200, 30));
        profileBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ourMenuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(profileBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(profileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ourMenuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profileBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recieptPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(recieptPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        menuScrollPane.getVerticalScrollBar().setUnitIncrement(20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void americanoComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_americanoComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_americanoComboboxActionPerformed

    private void americanoAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_americanoAddToBagButtonActionPerformed
        // TODO add your handling code here:
        // Order count must not be equal to 0 before placing a order
            if(americanoOrderCount != 0){

                String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Americano' AND productOzSize = CAST(SUBSTRING('" + americanoCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";

                double totalPrice = DBQuery.getProductPrice(getPriceQuery) * americanoOrderCount;
                // Order count must not be equal to 0 before placing a order
                if(americanoOrderCount != 0){

                // Get the selected variation of the americano coffee
                sizeSelected =  americanoCombobox.getSelectedItem().toString();
                productName = "Americano";

                // Create a new row of data in the table
                methods.addtable(productName, sizeSelected, americanoOrderCount, totalPrice);

                // Get the total price then add it to the total price of the items in the bag
                totalPriceInBag += totalPrice;
                totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());

                // Reset the order count to 0 when add to bag button is pressed
                americanoOrderCount = 0;
                orderCountAmericano.setText(Integer.toString(americanoOrderCount));
            }
        }       
    }//GEN-LAST:event_americanoAddToBagButtonActionPerformed

    private void decreaseOrderAmericanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderAmericanoActionPerformed
        // TODO add your handling code here:
        
        // Warn the user that they cannot enter a negative value
        if (americanoOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            americanoOrderCount--;
            orderCountAmericano.setText(Integer.toString(americanoOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderAmericanoActionPerformed

    private void increaseOrderAmericanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderAmericanoActionPerformed
        // TODO add your handling code here:
        
        // Increase order count
        americanoOrderCount++;
        orderCountAmericano.setText(Integer.toString(americanoOrderCount));
    }//GEN-LAST:event_increaseOrderAmericanoActionPerformed

    private void orderCountAmericanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountAmericanoActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_orderCountAmericanoActionPerformed

    private void cappuccinoAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cappuccinoAddToBagButtonActionPerformed
        // TODO add your handling code here:
        
        String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Cappuccino' AND productOzSize = CAST(SUBSTRING('" + cappuccinoCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
        
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * cappuccinoOrderCount;
        // Order count must not be equal to 0 before placing a order
        if(cappuccinoOrderCount != 0){
            
            // Get the selected variation of the americano coffee
            sizeSelected =  cappuccinoCombobox.getSelectedItem().toString();
            productName = "Cappuccino";
            
            // Create a new row of data in the table
            methods.addtable(productName, sizeSelected, cappuccinoOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            // Reset the order count to 0 when add to bag button is pressed
            cappuccinoOrderCount = 0;
            orderCountCappuccino.setText(Integer.toString(cappuccinoOrderCount));
        }
    }//GEN-LAST:event_cappuccinoAddToBagButtonActionPerformed

    private void decreaseOrderCappuccinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderCappuccinoActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (cappuccinoOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            cappuccinoOrderCount--;
            orderCountCappuccino.setText(Integer.toString(cappuccinoOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderCappuccinoActionPerformed

    private void orderCountCappuccinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountCappuccinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountCappuccinoActionPerformed

    private void increaseOrderCappuccinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderCappuccinoActionPerformed
        // TODO add your handling code here:
        // Increase order count
        cappuccinoOrderCount++;
        orderCountCappuccino.setText(Integer.toString(cappuccinoOrderCount));
    }//GEN-LAST:event_increaseOrderCappuccinoActionPerformed

    private void latteComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latteComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_latteComboboxActionPerformed

    private void latteAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_latteAddToBagButtonActionPerformed
        // TODO add your handling code here:
        
        // Order count must not be equal to 0 before placing a order
        if(latteOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Latte' AND productOzSize = CAST(SUBSTRING('" + latteCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * latteOrderCount;
            
            // Get the selected variation of the americano coffee
            sizeSelected = latteCombobox.getSelectedItem().toString();
            productName = "Latte";
            
            methods.addtable(productName, sizeSelected, latteOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            // Reset the order count to 0 when add to bag button is pressed
            latteOrderCount = 0;
            orderCountLatte.setText(Integer.toString(latteOrderCount));
        }
    }//GEN-LAST:event_latteAddToBagButtonActionPerformed

    private void decreaseOrderLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderLatteActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (latteOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            latteOrderCount--;
            orderCountLatte.setText(Integer.toString(latteOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderLatteActionPerformed

    private void orderCountLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountLatteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountLatteActionPerformed

    private void increaseOrderLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderLatteActionPerformed
        // TODO add your handling code here:
        // Increase order count
        latteOrderCount++;
        orderCountLatte.setText(Integer.toString(latteOrderCount));
    }//GEN-LAST:event_increaseOrderLatteActionPerformed

    private void caramelMaccComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caramelMaccComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caramelMaccComboboxActionPerformed

    private void caramelMaccAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caramelMaccAddToBagButtonActionPerformed
        // TODO add your handling code here:
        // Order count must not be equal to 0 before placing a order
        if(caramelMaccOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Caramel Macchiato' AND productOzSize = CAST(SUBSTRING('" + caramelMaccCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * caramelMaccOrderCount;
            
            // Get the selected variation of the americano coffee
            sizeSelected = caramelMaccCombobox.getSelectedItem().toString();
            productName = "Caramel Macchiato";
            
            methods.addtable(productName, sizeSelected, caramelMaccOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            // Reset the order count to 0 when add to bag button is pressed
            caramelMaccOrderCount = 0;
            orderCountCaramelMacc.setText(Integer.toString(caramelMaccOrderCount));
        }
    }//GEN-LAST:event_caramelMaccAddToBagButtonActionPerformed

    private void decreaseOrderCaramelMaccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderCaramelMaccActionPerformed
        // TODO add your handling code here:
        
        // Warn the user that they cannot enter a negative value
        if (caramelMaccOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            caramelMaccOrderCount--;
            orderCountCaramelMacc.setText(Integer.toString(caramelMaccOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderCaramelMaccActionPerformed

    private void orderCountCaramelMaccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountCaramelMaccActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountCaramelMaccActionPerformed

    private void increaseOrderCaramelMaccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderCaramelMaccActionPerformed
        // TODO add your handling code here:
        // Increase order count
        caramelMaccOrderCount++;
        orderCountCaramelMacc.setText(Integer.toString(caramelMaccOrderCount));
    }//GEN-LAST:event_increaseOrderCaramelMaccActionPerformed

    private void spanishLatteComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spanishLatteComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spanishLatteComboboxActionPerformed

    private void spanishLatteAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spanishLatteAddToBagButtonActionPerformed
        // TODO add your handling code here:
        // Order count must not be equal to 0 before placing a order
        if(spanishLatteOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Spanish Latte' AND productOzSize = CAST(SUBSTRING('" + spanishLatteCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * spanishLatteOrderCount;
            // Get the selected variation of the americano coffee
            sizeSelected = spanishLatteCombobox.getSelectedItem().toString();
            productName = "Spanish Latte";
                    
            methods.addtable(productName, sizeSelected, spanishLatteOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            // Reset the order count to 0 when add to bag button is pressed
            spanishLatteOrderCount = 0;
            orderCountSpanishLatte.setText(Integer.toString(spanishLatteOrderCount));
        }
    }//GEN-LAST:event_spanishLatteAddToBagButtonActionPerformed

    private void decreaseOrderSpanishLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderSpanishLatteActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (spanishLatteOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            spanishLatteOrderCount--;
            orderCountSpanishLatte.setText(Integer.toString(spanishLatteOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderSpanishLatteActionPerformed

    private void orderCountSpanishLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountSpanishLatteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountSpanishLatteActionPerformed

    private void increaseOrderSpanishLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderSpanishLatteActionPerformed
        // TODO add your handling code here:
        // Increase order count
        spanishLatteOrderCount++;
        orderCountSpanishLatte.setText(Integer.toString(spanishLatteOrderCount));
    }//GEN-LAST:event_increaseOrderSpanishLatteActionPerformed

    private void hazelnutComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hazelnutComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hazelnutComboboxActionPerformed

    private void hazelnutAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hazelnutAddToBagButtonActionPerformed
        // TODO add your handling code here:
        if(hazelnutOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Hazelnut' AND productOzSize = CAST(SUBSTRING('" + hazelnutCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * hazelnutOrderCount;
            
            // Get the selected variation of the americano coffee
            sizeSelected = hazelnutCombobox.getSelectedItem().toString();
            productName = "Hazelnut";
            
            methods.addtable(productName, sizeSelected, hazelnutOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            // Reset the order count to 0 when add to bag button is pressed
            hazelnutOrderCount = 0;
            orderCountHazelnut.setText(Integer.toString(hazelnutOrderCount));
        }
    }//GEN-LAST:event_hazelnutAddToBagButtonActionPerformed

    private void decreaseOrderHazelnutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderHazelnutActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (hazelnutOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            hazelnutOrderCount--;
            orderCountHazelnut.setText(Integer.toString(hazelnutOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderHazelnutActionPerformed

    private void orderCountHazelnutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountHazelnutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountHazelnutActionPerformed

    private void increaseOrderHazelnutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderHazelnutActionPerformed
        // TODO add your handling code here:
        // Increase order count
        hazelnutOrderCount++;
        orderCountHazelnut.setText(Integer.toString(hazelnutOrderCount));
    }//GEN-LAST:event_increaseOrderHazelnutActionPerformed

    private void saltedCaramelAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saltedCaramelAddToBagButtonActionPerformed
        // TODO add your handling code here:
        
        if(saltedCaramelOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Salted Caramel' AND productOzSize = CAST(SUBSTRING('" + saltedCaramelCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * saltedCaramelOrderCount;
            // Get the selected variation of the americano coffee
            sizeSelected = saltedCaramelCombobox.getSelectedItem().toString();
            productName = "Salted Caramel";
            
            methods.addtable(productName, sizeSelected, saltedCaramelOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            saltedCaramelOrderCount = 0;
            orderCountSaltedCaramel.setText(Integer.toString(saltedCaramelOrderCount));
        }
    }//GEN-LAST:event_saltedCaramelAddToBagButtonActionPerformed

    private void saltedCaramelComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saltedCaramelComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saltedCaramelComboboxActionPerformed

    private void orderCountSaltedCaramelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountSaltedCaramelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountSaltedCaramelActionPerformed

    private void decreaseOrderSaltedCaramelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderSaltedCaramelActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (saltedCaramelOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            saltedCaramelOrderCount--;
            orderCountSaltedCaramel.setText(Integer.toString(saltedCaramelOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderSaltedCaramelActionPerformed

    private void increaseOrderSaltedCaramelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderSaltedCaramelActionPerformed
        // TODO add your handling code here:
        // Increase order count
        saltedCaramelOrderCount++;
        orderCountSaltedCaramel.setText(Integer.toString(saltedCaramelOrderCount));
    }//GEN-LAST:event_increaseOrderSaltedCaramelActionPerformed

    private void increaseOrderVanillaLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderVanillaLatteActionPerformed
        // TODO add your handling code here:
        // Increase order count
        vanillaLatteOrderCount++;
        orderCountVanillaLatte.setText(Integer.toString(vanillaLatteOrderCount));
    }//GEN-LAST:event_increaseOrderVanillaLatteActionPerformed

    private void orderCountVanillaLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountVanillaLatteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountVanillaLatteActionPerformed

    private void decreaseOrderVanillaLatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderVanillaLatteActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (vanillaLatteOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            vanillaLatteOrderCount--;
            orderCountVanillaLatte.setText(Integer.toString(vanillaLatteOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderVanillaLatteActionPerformed

    private void vanillaLatteComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanillaLatteComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vanillaLatteComboboxActionPerformed

    private void vanillaLatteAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanillaLatteAddToBagButtonActionPerformed
        // TODO add your handling code here:
        if(vanillaLatteOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Vanilla Latte' AND productOzSize = CAST(SUBSTRING('" + vanillaLatteCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * vanillaLatteOrderCount;
            
            // Get the selected variation of the americano coffee
            sizeSelected = vanillaLatteCombobox.getSelectedItem().toString();
            productName = "Vanilla Latte";
            
            methods.addtable(productName, sizeSelected, vanillaLatteOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            vanillaLatteOrderCount = 0;
            orderCountVanillaLatte.setText(Integer.toString(vanillaLatteOrderCount));
        }
    }//GEN-LAST:event_vanillaLatteAddToBagButtonActionPerformed

    private void strawberrySodaAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strawberrySodaAddToBagButtonActionPerformed
        // TODO add your handling code here:
        
        // Order count must not be equal to 0 before placing a order
        if(strawberrySodaOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Strawberry' AND productOzSize = CAST(SUBSTRING('" + strawberrySodaCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * strawberrySodaOrderCount;
            
            // Get the selected variation of the americano coffee
            sizeSelected =  strawberrySodaCombobox.getSelectedItem().toString();
            productName = "Strawberry";
                    
            methods.addtable(productName, sizeSelected, strawberrySodaOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            strawberrySodaOrderCount = 0;
            orderCountStrawberrySoda.setText(Integer.toString(strawberrySodaOrderCount));
        }
    }//GEN-LAST:event_strawberrySodaAddToBagButtonActionPerformed

    private void strawberrySodaComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strawberrySodaComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_strawberrySodaComboboxActionPerformed

    private void decreaseOrderStrawberrySodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderStrawberrySodaActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (strawberrySodaOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            strawberrySodaOrderCount--;
            orderCountStrawberrySoda.setText(Integer.toString(strawberrySodaOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderStrawberrySodaActionPerformed

    private void orderCountStrawberrySodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountStrawberrySodaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountStrawberrySodaActionPerformed

    private void increaseOrderStrawberrySodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderStrawberrySodaActionPerformed
        // TODO add your handling code here:
        // Increase order count
        strawberrySodaOrderCount++;
        orderCountStrawberrySoda.setText(Integer.toString(strawberrySodaOrderCount));
    }//GEN-LAST:event_increaseOrderStrawberrySodaActionPerformed

    private void blueberrySodaAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueberrySodaAddToBagButtonActionPerformed
        // TODO add your handling code here:
        // Order count must not be equal to 0 before placing a order
        if(blueberrySodaOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Blueberry' AND productOzSize = CAST(SUBSTRING('" + blueberrySodaCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * blueberrySodaOrderCount;
            
            // Get the selected variation of the americano coffee
            sizeSelected = blueberrySodaCombobox.getSelectedItem().toString();
            productName = "Blueberry";
            
            methods.addtable(productName, sizeSelected, blueberrySodaOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            blueberrySodaOrderCount = 0;
            orderCountBlueberrySoda.setText(Integer.toString(blueberrySodaOrderCount));
        }
    }//GEN-LAST:event_blueberrySodaAddToBagButtonActionPerformed

    private void blueberrySodaComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueberrySodaComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blueberrySodaComboboxActionPerformed

    private void decreaseOrderBlueberrySodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderBlueberrySodaActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (blueberrySodaOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            blueberrySodaOrderCount--;
            orderCountBlueberrySoda.setText(Integer.toString(blueberrySodaOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderBlueberrySodaActionPerformed

    private void orderCountBlueberrySodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountBlueberrySodaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountBlueberrySodaActionPerformed

    private void increaseOrderBlueberrySodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderBlueberrySodaActionPerformed
        // TODO add your handling code here:
        // Increase order count
        blueberrySodaOrderCount++;
        orderCountBlueberrySoda.setText(Integer.toString(blueberrySodaOrderCount));
    }//GEN-LAST:event_increaseOrderBlueberrySodaActionPerformed

    private void mangoSodaAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mangoSodaAddToBagButtonActionPerformed
        // TODO add your handling code here:
        // Order count must not be equal to 0 before placing a order
        if(mangoSodaOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Mango' AND productOzSize = CAST(SUBSTRING('" + mangoSodaCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * mangoSodaOrderCount;
            // Get the selected variation of the americano coffee
            sizeSelected = mangoSodaCombobox.getSelectedItem().toString();
            productName = "Mango"; 
            
            methods.addtable(productName, sizeSelected, mangoSodaOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            mangoSodaOrderCount = 0;
            orderCountMangoSoda.setText(Integer.toString(mangoSodaOrderCount));
        }
    }//GEN-LAST:event_mangoSodaAddToBagButtonActionPerformed

    private void mangoSodaComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mangoSodaComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mangoSodaComboboxActionPerformed

    private void decreaseOrderMangoSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderMangoSodaActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (mangoSodaOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            mangoSodaOrderCount--;
            orderCountMangoSoda.setText(Integer.toString(mangoSodaOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderMangoSodaActionPerformed

    private void orderCountMangoSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountMangoSodaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountMangoSodaActionPerformed

    private void increaseOrderMangoSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderMangoSodaActionPerformed
        // TODO add your handling code here:
        // Increase order count
        mangoSodaOrderCount++;
        orderCountMangoSoda.setText(Integer.toString(mangoSodaOrderCount));
    }//GEN-LAST:event_increaseOrderMangoSodaActionPerformed

    private void gappleSodaAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gappleSodaAddToBagButtonActionPerformed
        // TODO add your handling code here:
        // Order count must not be equal to 0 before placing a order
        if(gappleSodaOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Green Apple' AND productOzSize = CAST(SUBSTRING('" + gappleSodaCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * gappleSodaOrderCount;
            
            // Get the selected variation of the americano coffee
            sizeSelected = gappleSodaCombobox.getSelectedItem().toString();
            productName = "Green Apple";
            
            methods.addtable(productName, sizeSelected, gappleSodaOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            gappleSodaOrderCount = 0;
            orderCountGappleSoda.setText(Integer.toString(gappleSodaOrderCount));
        }
    }//GEN-LAST:event_gappleSodaAddToBagButtonActionPerformed

    private void decreaseOrderGappleSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderGappleSodaActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (gappleSodaOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            gappleSodaOrderCount--;
            orderCountGappleSoda.setText(Integer.toString(gappleSodaOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderGappleSodaActionPerformed
    private void gappleSodaComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gappleSodaComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gappleSodaComboboxActionPerformed

    private void orderCountGappleSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountGappleSodaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountGappleSodaActionPerformed

    private void increaseOrderGappleSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderGappleSodaActionPerformed
        // TODO add your handling code here:
        // Increase order count
        gappleSodaOrderCount++;
        orderCountGappleSoda.setText(Integer.toString(gappleSodaOrderCount));
    }//GEN-LAST:event_increaseOrderGappleSodaActionPerformed

    private void peachSodaComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peachSodaComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peachSodaComboboxActionPerformed

    private void peachSodaAddToBagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peachSodaAddToBagButtonActionPerformed
        // TODO add your handling code here:
        // Order count must not be equal to 0 before placing a order
        if(peachSodaOrderCount != 0){
            
            String getPriceQuery = "SELECT price FROM productTB WHERE productName = 'Peach' AND productOzSize = CAST(SUBSTRING('" + peachSodaCombobox.getSelectedItem().toString() + "', 1, 2) AS UNSIGNED)";
            double totalPrice = DBQuery.getProductPrice(getPriceQuery) * peachSodaOrderCount;
            
            // Get the selected variation of the americano coffee
            sizeSelected = peachSodaCombobox.getSelectedItem().toString();
            productName = "Peach";
            
            methods.addtable(productName, sizeSelected, peachSodaOrderCount, totalPrice);
            
            // Get the total price then add it to the total price of the items in the bag
            totalPriceInBag += totalPrice;
            totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            
            peachSodaOrderCount = 0;
            orderCountPeachSoda.setText(Integer.toString(peachSodaOrderCount));
        }
    }//GEN-LAST:event_peachSodaAddToBagButtonActionPerformed

    private void decreaseOrderPeachSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decreaseOrderPeachSodaActionPerformed
        // TODO add your handling code here:
        // Warn the user that they cannot enter a negative value
        if (peachSodaOrderCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Order is already set to the lowest value");
        } // Decrease order amount if the count is not 0
        else {
            peachSodaOrderCount--;
            orderCountPeachSoda.setText(Integer.toString(peachSodaOrderCount));
        }
    }//GEN-LAST:event_decreaseOrderPeachSodaActionPerformed

    private void orderCountPeachSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderCountPeachSodaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderCountPeachSodaActionPerformed

    private void increaseOrderPeachSodaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseOrderPeachSodaActionPerformed
        // TODO add your handling code here:
        // Increase order count
        peachSodaOrderCount++;
        orderCountPeachSoda.setText(Integer.toString(peachSodaOrderCount));
    }//GEN-LAST:event_increaseOrderPeachSodaActionPerformed

    private void checkOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkOutBtnActionPerformed
        // TODO add your handling code here:
        if (bagContent.getRowCount() != 0)
        {
            Payment paymentFrame = new Payment(this);
            paymentFrame.setVisible(true);
            paymentFrame.pack();
            paymentFrame.setLocationRelativeTo(null);
            
            this.setEnabled(false);
        }
        else {
            JOptionPane.showMessageDialog(null, "Cannot check out\nYour bag is currently empty");
        }
    }//GEN-LAST:event_checkOutBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        int confirmLogout = JOptionPane.showConfirmDialog(null, "Do you want to logout?", "Log Out", JOptionPane.YES_NO_OPTION);
        
        if (confirmLogout == JOptionPane.YES_NO_OPTION){
            LogIn LogInFrame = new LogIn();
            LogInFrame.setVisible(true);
            LogInFrame.pack();
            LogInFrame.setLocationRelativeTo(null);
            
            this.dispose();
        }
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void removeItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemBtnActionPerformed
        // TODO add your handling code here:
        
        try{
            DefaultTableModel dt = (DefaultTableModel) bagContent.getModel();
            
            int selectedRow = bagContent.getSelectedRow();

            totalPriceInBag -= Double.parseDouble(bagContent.getValueAt(selectedRow, 3).toString());
            totalPriceLabel.setText("PHP " + String.valueOf(decimalFormat.format(totalPriceInBag)));

            dt.removeRow(selectedRow);
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
            
       
    }//GEN-LAST:event_removeItemBtnActionPerformed

    private void clearListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearListBtnActionPerformed
        // TODO add your handling code here:
        
        if (bagContent.getRowCount() != 0){
            int confirmClearTable = JOptionPane.showConfirmDialog(null, "Do you want to clear your list?", "Clear Bag", JOptionPane.YES_NO_OPTION);
            
            if (confirmClearTable == JOptionPane.YES_NO_OPTION)
            {
                methods.clearTable(bagContent.getModel());
                
                totalPriceInBag = 0;
                totalPriceLabel.setText("PHP " + decimalFormat.format(totalPriceInBag).toString());
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Cannot clear your bag\nBag already clear");
        }
    }//GEN-LAST:event_clearListBtnActionPerformed

    private void profileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileBtnActionPerformed
        // TODO add your handling code here:
        if (bagContent.getRowCount() != 0){
            int goToProfile = JOptionPane.showConfirmDialog( null, "Going to profile will clear your bag\nDo you want to continue?", "Continue?", JOptionPane.YES_NO_OPTION);
            if(goToProfile == JOptionPane.YES_NO_OPTION){
                Account accountFrame = new Account();
                accountFrame.setVisible(true);
                accountFrame.pack();
                accountFrame.setLocationRelativeTo(null);
                
                this.dispose();
            }
        }
        else {
            if(DBQuery.getUserRole(CoffeeSystem.userEmail).equals("admin")){
                Account accountFrame = new Account();
                accountFrame.setVisible(true);
                accountFrame.pack();
                accountFrame.setLocationRelativeTo(null);
                
                Account.ourMenuBtn.setText("Dashboard");
                Account.productBtn.setText("Products");
                
                this.dispose();
            }
            else{
                Account accountFrame = new Account();
                accountFrame.setVisible(true);
                accountFrame.pack();
                accountFrame.setLocationRelativeTo(null);
                
                Account.ourMenuBtn.setText("My Purchase");
                Account.productBtn.setText("Our Menu");
                Account.orderListBtn.setVisible(false);
                Account.userListBtn.setVisible(false);
                
                this.dispose();
            }
        }
        
    }//GEN-LAST:event_profileBtnActionPerformed

    private void ourMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ourMenuBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ourMenuBtnActionPerformed

    private void cappuccinoComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cappuccinoComboboxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cappuccinoComboboxActionPerformed

    private void profileBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileBtn1ActionPerformed
        // TODO add your handling code here:
        Dashboard dashboard = new Dashboard();
        dashboard.setVisible(true);
        dashboard.pack();
        dashboard.setLocationRelativeTo(null);
        
        this.dispose();
    }//GEN-LAST:event_profileBtn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton americanoAddToBagButton;
    private javax.swing.JComboBox<String> americanoCombobox;
    public static javax.swing.JTable bagContent;
    private javax.swing.JLabel bagIcon;
    private javax.swing.JLabel beverageLabel1;
    private javax.swing.JLabel beverageLabel10;
    private javax.swing.JLabel beverageLabel11;
    private javax.swing.JLabel beverageLabel12;
    private javax.swing.JLabel beverageLabel13;
    private javax.swing.JLabel beverageLabel2;
    private javax.swing.JLabel beverageLabel3;
    private javax.swing.JLabel beverageLabel4;
    private javax.swing.JLabel beverageLabel5;
    private javax.swing.JLabel beverageLabel6;
    private javax.swing.JLabel beverageLabel7;
    private javax.swing.JLabel beverageLabel8;
    private javax.swing.JLabel beverageLabel9;
    private javax.swing.JButton blueberrySodaAddToBagButton;
    private javax.swing.JComboBox<String> blueberrySodaCombobox;
    private javax.swing.JButton cappuccinoAddToBagButton;
    private javax.swing.JComboBox<String> cappuccinoCombobox;
    private javax.swing.JButton caramelMaccAddToBagButton;
    private javax.swing.JComboBox<String> caramelMaccCombobox;
    private javax.swing.JButton checkOutBtn;
    private javax.swing.JButton clearListBtn;
    private javax.swing.JButton decreaseOrderAmericano;
    private javax.swing.JButton decreaseOrderBlueberrySoda;
    private javax.swing.JButton decreaseOrderCappuccino;
    private javax.swing.JButton decreaseOrderCaramelMacc;
    private javax.swing.JButton decreaseOrderGappleSoda;
    private javax.swing.JButton decreaseOrderHazelnut;
    private javax.swing.JButton decreaseOrderLatte;
    private javax.swing.JButton decreaseOrderMangoSoda;
    private javax.swing.JButton decreaseOrderPeachSoda;
    private javax.swing.JButton decreaseOrderSaltedCaramel;
    private javax.swing.JButton decreaseOrderSpanishLatte;
    private javax.swing.JButton decreaseOrderStrawberrySoda;
    private javax.swing.JButton decreaseOrderVanillaLatte;
    private javax.swing.JButton gappleSodaAddToBagButton;
    private javax.swing.JComboBox<String> gappleSodaCombobox;
    private javax.swing.JButton hazelnutAddToBagButton;
    private javax.swing.JComboBox<String> hazelnutCombobox;
    private javax.swing.JButton increaseOrderAmericano;
    private javax.swing.JButton increaseOrderBlueberrySoda;
    private javax.swing.JButton increaseOrderCappuccino;
    private javax.swing.JButton increaseOrderCaramelMacc;
    private javax.swing.JButton increaseOrderGappleSoda;
    private javax.swing.JButton increaseOrderHazelnut;
    private javax.swing.JButton increaseOrderLatte;
    private javax.swing.JButton increaseOrderMangoSoda;
    private javax.swing.JButton increaseOrderPeachSoda;
    private javax.swing.JButton increaseOrderSaltedCaramel;
    private javax.swing.JButton increaseOrderSpanishLatte;
    private javax.swing.JButton increaseOrderStrawberrySoda;
    private javax.swing.JButton increaseOrderVanillaLatte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton latteAddToBagButton;
    private javax.swing.JComboBox<String> latteCombobox;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton mangoSodaAddToBagButton;
    private javax.swing.JComboBox<String> mangoSodaCombobox;
    private javax.swing.JScrollPane menuScrollPane;
    private javax.swing.JTextField orderCountAmericano;
    private javax.swing.JTextField orderCountBlueberrySoda;
    private javax.swing.JTextField orderCountCappuccino;
    private javax.swing.JTextField orderCountCaramelMacc;
    private javax.swing.JTextField orderCountGappleSoda;
    private javax.swing.JTextField orderCountHazelnut;
    private javax.swing.JTextField orderCountLatte;
    private javax.swing.JTextField orderCountMangoSoda;
    private javax.swing.JTextField orderCountPeachSoda;
    private javax.swing.JTextField orderCountSaltedCaramel;
    private javax.swing.JTextField orderCountSpanishLatte;
    private javax.swing.JTextField orderCountStrawberrySoda;
    private javax.swing.JTextField orderCountVanillaLatte;
    private javax.swing.JButton ourMenuBtn;
    private javax.swing.JButton peachSodaAddToBagButton;
    private javax.swing.JComboBox<String> peachSodaCombobox;
    private javax.swing.JButton profileBtn;
    private javax.swing.JButton profileBtn1;
    private javax.swing.JPanel recieptPanel;
    private javax.swing.JButton removeItemBtn;
    private javax.swing.JButton saltedCaramelAddToBagButton;
    private javax.swing.JComboBox<String> saltedCaramelCombobox;
    private javax.swing.JLabel shoppingBagLabel;
    private javax.swing.JButton spanishLatteAddToBagButton;
    private javax.swing.JComboBox<String> spanishLatteCombobox;
    private javax.swing.JButton strawberrySodaAddToBagButton;
    private javax.swing.JComboBox<String> strawberrySodaCombobox;
    public static javax.swing.JLabel totalPriceLabel;
    private javax.swing.JButton vanillaLatteAddToBagButton;
    private javax.swing.JComboBox<String> vanillaLatteCombobox;
    // End of variables declaration//GEN-END:variables
}
